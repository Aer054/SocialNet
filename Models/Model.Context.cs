//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocialNet.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Access_for_Comunity> Access_for_Comunities { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Community> Communities { get; set; }
        public virtual DbSet<CommunityMember> CommunityMembers { get; set; }
        public virtual DbSet<CommunityPost> CommunityPosts { get; set; }
        public virtual DbSet<Friend_Request> Friend_Requests { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<CommunityMembersRole> CommunityMembersRoles { get; set; }
        public virtual DbSet<ProtectedUser> ProtectedUsers { get; set; }
        public virtual DbSet<UserPost> UserPosts { get; set; }
    
        public virtual int AddUser(string login, string password, string last_Name, string first_Name, string patronymic)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var patronymicParameter = patronymic != null ?
                new ObjectParameter("Patronymic", patronymic) :
                new ObjectParameter("Patronymic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUser", loginParameter, passwordParameter, last_NameParameter, first_NameParameter, patronymicParameter);
        }
    
        public virtual ObjectResult<GetCurrentCommunityComposition_Result> GetCurrentCommunityComposition(string communityName)
        {
            var communityNameParameter = communityName != null ?
                new ObjectParameter("CommunityName", communityName) :
                new ObjectParameter("CommunityName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrentCommunityComposition_Result>("GetCurrentCommunityComposition", communityNameParameter);
        }
    }
}
